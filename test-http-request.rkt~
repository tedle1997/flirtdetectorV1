(define google-api
    (update-ssl
      (update-host json-requester "www.googleapis.com") #t))

(define response
  (post
   google-api
   "/oauth2/v4/token"
   #:data (jsexpr->string (hasheq 'client_id
                                  "953670783310-382k5nb2qdfguunfo3nbvv8a8joqkcm3.apps.googleusercontent.com"
                                  'client_secret "VIyH0aSnQ3NcE46YsMZvXtqD"
                                  'redirect_uri "http://localhost:8000/token/"
                                  'grant_type "authorization_code"
                                  ;Change the 'code every hour
                                  'code acc-code))
 ))

(define auth-key
  (cdr(second (hash->list (json-response-body response)))))
(define auth (string-append "Authorization: Bearer " auth-key))
(define content-type "Content-Type: application/json")

(define auto-ml-api
  (update-headers
   (update-ssl
    (update-host json-requester "automl.googleapis.com") #t)
   (list auth content-type)
   )
  )
;  


; String
; The input that need to be classify to put it into the data_send
(define input "Can you see that Im the one who understand you. Been here all along so why cant you see, you belong with me.")

; String
; String representation of the Json part for the http post section
(define data_send
  (jsexpr->string (hasheq 'payload
                          (hasheq 'textSnippet
                                  (hasheq 'content input
                                          'mime_type "text/plain"
                                   )
                                  ) 
                                  )
                  )
  )

; Json
; json response of the model after sending the input into the api call. At the end of the predict, all the prediction data for the sentence is in that Json
(define predict
  (json-response-body (post
                       auto-ml-api
                       "/v1beta1/projects/flirtdetector/locations/us-central1/models/TCN4644038441693810693:predict"
                       #:data data_send)
                      )
  )

predict

(payload
  #hasheq((classification . #hasheq((score . 0.76927525))) (displayName . flirtation))
  #hasheq((classification . #hasheq((score . 0.15892592))) (displayName . sorrow_and_break_up))
  #hasheq((classification . #hasheq((score . 0.07971727))) (displayName . self_perception))
  #hasheq((classification . #hasheq((score . 0.3187586))) (displayName . non_flirting_affection))
  #hasheq((classification . #hasheq((score . 0.2962231))) (displayName . world_perception)))x